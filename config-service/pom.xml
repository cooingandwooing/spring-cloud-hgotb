<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <parent>
        <groupId>com.github.cooingandwooing</groupId>
        <artifactId>spring-cloud-hgotb</artifactId>
        <version>${revision}</version>
    </parent>
    <artifactId>config-service</artifactId>
    <name>${project.artifactId}</name>
    <description>配置中心</description>

    <dependencies>
        <!-- 配置服务 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-config-server</artifactId>
        </dependency>

        <!-- security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- 管理中心插件 -->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <finalName>${project.name}</finalName>
                </configuration>
            </plugin>
            <!-- 打包时跳过test插件，不运行test测试用例 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>

            <!-- docker的maven插件 -->
            <plugin>
                <!--三个坐标定位dockerfile插件-->
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${docker.maven.verion}</version>
                <executions>
                    <!--执行 mvn package 时 自动构建docker镜像并推送到仓库 -->
                    <execution>
                        <id>default</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--这里指定打包镜像的名称-->
                    <!--使用用户名和密码  可以在命令行写 哈哈 mvn goal -Ddockerfile.username=... -Ddockerfile.password=...-->
                    <!-- <username>repoUserName</username>
                     <password>repoPassword</password>
                     -->
                    <repository>${docker.registry}/${docker.namespace}/${project.artifactId}</repository>
                    <tag>${project.version}</tag>
                    <!-- 构建参数，指定jar包名称 -->
                    <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
                    <buildArgs>
                        <JAR_FILE>${project.name}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
