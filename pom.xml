<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013-2019 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.cooingandwooing</groupId>
    <artifactId>spring-cloud-hgotb</artifactId>
    <!--在 Maven 中，任何一个项目和构件都必须有自己的版本。版本的值可能是 1.0.0、1.0-alpha-4、1.3-SNAPSHOT 等，其中 1.0.0、1.0-alpha-4 是稳定的发布版本，而 1.3-SNAPSHOT 为不稳定的快照版本。-->
    <version>${revision}</version>

    <packaging>pom</packaging>
    <name>spring-cloud-hgotb</name>
    <description>poetry微服务基础系统</description>
    <url>https://gitee.com/zhanzhanlusi/spring-cloud-hgotb.git</url>

    <developers>
        <developer>
            <name>gaoxiaofeng</name>
            <email>554099752@qq.com</email>
            <url>https://gitee.com/zhanzhanlusi</url>
        </developer>
    </developers>

    <modules>
        <module>config-service</module>
        <module>gateway-service</module>
        <module>common</module>
        <module>monitor-service</module>
        <module>modules</module>
        <module>zipkin-service</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.9.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <!-- 版本号 -->
        <revision>1.0.0</revision>
        <!-- 编译 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <javadoc.version>3.0.0</javadoc.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <!-- spring boot、spring cloud -->
        <spring-boot.version>2.2.6.RELEASE</spring-boot.version>
        <spring-cloud.version>Hoxton.SR4</spring-cloud.version>
        <spring.cloud.k8s.version>2.0.0-SNAPSHOT</spring.cloud.k8s.version>
        <security.auth.version>2.3.5.RELEASE</security.auth.version>
        <spring-boot-admin.version>2.1.6</spring-boot-admin.version>
        <spring-cloud-sleuth.version>2.1.0.RELEASE</spring-cloud-sleuth.version>
        <zipkin.version>2.11.3</zipkin.version>
        <swagger.version>2.9.2</swagger.version>
        <fastdfs-client.version>1.26.7</fastdfs-client.version>
        <mysql.connector.version>8.0.13</mysql.connector.version>
        <!-- common -->
        <commons-io.version>2.6</commons-io.version>
        <commons-collections4.version>4.0</commons-collections4.version>
        <commons-beanutils.version>1.9.2</commons-beanutils.version>

        <!-- 其它依赖 -->
        <hibernate-validator.version>6.0.14.Final</hibernate-validator.version>
        <mybatis.version>2.1.0</mybatis.version>
        <pagehelper.version>1.2.10</pagehelper.version>
        <poi.version>3.9</poi.version>
        <xmlbeans.version>2.3.0</xmlbeans.version>
        <hutool.version>4.5.0</hutool.version>
        <jasypt.version>1.18</jasypt.version>
        <kaptcha.version>0.0.9</kaptcha.version>
        <json.version>20140107</json.version>
        <okhttp.version>3.8.1</okhttp.version>
        <aliyun.version>4.0.3</aliyun.version>
        <!-- 当前版本3.5.10.B -->
        <weixin.version>3.4.0</weixin.version>

        <!-- docker 打包使用的参数-->
        <docker.maven.verion>1.4.3</docker.maven.verion>
        <!-- 连接阿里云 -->
        <!--        <docker.registry>registry.cn-hangzhou.aliyuncs.com</docker.registry>
				<docker.namespace>spring-cloud-hgotb</docker.namespace>-->
        <!-- 连接Harbor 私有仓库 -->
        <docker.registry>hub.poetry.com</docker.registry>
        <docker.namespace>poetry</docker.namespace>
        <fabric8.maven.plugin.version>4.4.0</fabric8.maven.plugin.version>

        <scanner.maven.version>3.3.0.603</scanner.maven.version>

        <!-- logstash -->
        <logstash.version>5.2</logstash.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>

        <maven-checkstyle-plugin.failsOnError>true</maven-checkstyle-plugin.failsOnError>
        <maven-checkstyle-plugin.failsOnViolation>true
        </maven-checkstyle-plugin.failsOnViolation>
        <maven-checkstyle-plugin.includeTestSourceDirectory>true
        </maven-checkstyle-plugin.includeTestSourceDirectory>
    </properties>

    <dependencies>
        <!-- spring boot test-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 服务注册、发现 DiscoveryClient for Kubernetes-->

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-kubernetes</artifactId>
        </dependency>
        <!-- hystrix 断路器 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>

        <!-- 暴露指标 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- spring cloud bus -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
        </dependency>

        <!-- sleuth -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-sleuth</artifactId>
        </dependency>

        <!-- zipkin -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>

        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

        <!-- swagger -->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
        </dependency>

        <!-- logstash -->
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.binarywang</groupId>
            <artifactId>weixin-java-pay</artifactId>
            <version>${weixin.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-math3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>3.1.1</version>
        </dependency>
    </dependencies>

    <!-- spring cloud base -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-kubernetes-dependencies</artifactId>
                <version>${spring.cloud.k8s.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- common-core -->
            <dependency>
                <groupId>com.github.cooingandwooing</groupId>
                <artifactId>common-core</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- common-config -->
            <dependency>
                <groupId>com.github.cooingandwooing</groupId>
                <artifactId>common-config</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- common-security -->
            <dependency>
                <groupId>com.github.cooingandwooing</groupId>
                <artifactId>common-security</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- common-feign -->
            <dependency>
                <groupId>com.github.cooingandwooing</groupId>
                <artifactId>common-feign</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- common-log -->
            <dependency>
                <groupId>com.github.cooingandwooing</groupId>
                <artifactId>common-log</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- user-service-api -->
            <dependency>
                <groupId>com.github.cooingandwooing</groupId>
                <artifactId>user-service-api</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- auth-service-api -->
            <dependency>
                <groupId>com.github.cooingandwooing</groupId>
                <artifactId>auth-service-api</artifactId>
                <version>${revision}</version>
            </dependency>

            <!-- msc-service-api -->
            <dependency>
                <groupId>com.github.cooingandwooing</groupId>
                <artifactId>msc-service-api</artifactId>
                <version>${revision}</version>
            </dependency>
            <!-- 管理中心插件  -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>

            <!-- 管理中心插件 -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>

            <!-- swagger -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!--MySQL-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
            </dependency>

            <!-- mybatis -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <!--fastDfs-->
            <dependency>
                <groupId>com.github.tobato</groupId>
                <artifactId>fastdfs-client</artifactId>
                <version>${fastdfs-client.version}</version>
            </dependency>

            <!-- 验证码 -->
            <dependency>
                <groupId>com.github.axet</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>

            <!-- 微信小程序 -->
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-miniapp</artifactId>
                <version>${weixin.version}</version>
            </dependency>

            <!-- 微信支付 -->
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-pay</artifactId>
                <version>${weixin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <target>${java.version}</target>
                        <source>${java.version}</source>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${javadoc.version}</version>
                </plugin>
                <!-- sonar进行maven项目代码质量管理 -->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${scanner.maven.version}</version>
                </plugin>

            </plugins>

        </pluginManagement>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>
    <repositories>
        <!--虽然用户可以从中央仓库中找到绝大部分流行的构件，但是毕竟不能找到所有构件。对那些在中央仓库中没有的构件，又要怎么办呢？可以在 pom.xml 中添加另外一个远程仓库。-->
        <!--        <repository>
					<id>spring-milestones</id>
					<name>Spring Milestones</name>
					<url>https://repo.spring.io/milestone</url>
				</repository>-->
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/libs-milestone-local</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/libs-snapshot-local</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
        <!--另外，配置中的 releases 和 snapshots 元素也是比较重要的元素，它们用来控制 Maven 对发布版本的构件和快照版本的构件的下载。当它们的子元素 enabled 的值配置成 true 或 false 的时候，表示开启或关闭对应版本的构件下载。-->
        <repository>
            <id>nexus-163</id>
            <name>Nexus 163</name>
            <url>http://mirrors.163.com/maven/repository/maven-public/</url>
            <layout>default</layout>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

</project>